{"mappings":"qhBAAA,IAAAA,EAAAC,EAAA,SAEA,MAAMC,EAAO,CACXC,OAAQC,SAASC,cAAc,UAkCjC,SAASC,EAAcC,EAAUC,GAC/B,MAAMC,EAAgBC,KAAKC,SAAW,GAEtC,OAAO,IAAIC,SAAQ,CAACC,EAASC,KAC3BC,YAAW,KACLN,GACFI,EAAQ,C,SAAEN,E,MAAUC,IAEtBM,EAAO,C,SAAEP,E,MAAUC,GAAQ,GAC1BA,EAAM,G,CAxCbN,EAAKC,OAAOa,iBAAiB,UAE7B,SAAqBC,GACnBA,EAAMC,iBAEN,IAAIC,GAASF,EAAMG,OAAOC,SAASb,MAAMc,MACzC,MAAMC,GAAQN,EAAMG,OAAOC,SAASE,KAAKD,MACnCE,GAAUP,EAAMG,OAAOC,SAASG,OAAOF,MAE7C,IACGL,EAAMG,OAAOC,SAASb,MAAMc,QAC5BL,EAAMG,OAAOC,SAASE,KAAKD,QAC3BL,EAAMG,OAAOC,SAASG,OAAOF,MAG9B,YADAG,EAAAzB,GAAS0B,OAAOC,QAAQ,0BAI1B,IAAK,IAAIC,EAAI,EAAGA,GAAKJ,EAAQI,GAAK,EAChCtB,EAAcsB,EAAGT,GACdU,MAAK,EAACtB,SAAEA,EAAQC,MAAEA,MACjBiB,EAAAzB,GAAS0B,OAAOI,QAAQ,qBAAqBvB,QAAeC,MAAU,IAEvEuB,OAAM,EAACxB,SAAEA,EAAQC,MAAEA,MAClBiB,EAAAzB,GAAS0B,OAAOC,QAAQ,oBAAoBpB,QAAeC,MAAU,IAEtEwB,SAAS,IAAM9B,EAAKC,OAAO8B,UAC9Bd,GAASI,C","sources":["src/js/03-promises.js"],"sourcesContent":["import Notiflix from 'notiflix';\n\nconst refs = {\n  formEl: document.querySelector('.form'),\n};\n\nrefs.formEl.addEventListener('submit', onInputData);\n\nfunction onInputData(event) {\n  event.preventDefault();\n\n  let delay = +event.target.elements.delay.value;\n  const step = +event.target.elements.step.value;\n  const amount = +event.target.elements.amount.value;\n\n  if (\n    !event.target.elements.delay.value ||\n    !event.target.elements.step.value ||\n    !event.target.elements.amount.value\n  ) {\n    Notiflix.Notify.failure('Please fill all fields');\n    return;\n  }\n\n  for (let i = 1; i <= amount; i += 1) {\n    createPromise(i, delay)\n      .then(({ position, delay }) => {\n        Notiflix.Notify.success(`Fulfilled promise ${position} in ${delay}ms`);\n      })\n      .catch(({ position, delay }) => {\n        Notiflix.Notify.failure(`Rejected promise ${position} in ${delay}ms`);\n      })\n      .finally (() => refs.formEl.reset()),\n    delay += step;\n  }\n}\n\nfunction createPromise(position, delay) {\n  const shouldResolve = Math.random() > 0.3;\n\n  return new Promise((resolve, reject) => {\n    setTimeout(() => {\n      if (shouldResolve) {\n        resolve({ position, delay });\n      }\n      reject({ position, delay });\n    }, delay);\n  });\n}"],"names":["$7Y9D8","parcelRequire","$47d4ff9957288465$var$refs","formEl","document","querySelector","$47d4ff9957288465$var$createPromise","position","delay","shouldResolve","Math","random","Promise","resolve","reject","setTimeout","addEventListener","event","preventDefault","delay1","target","elements","value","step","amount","$parcel$interopDefault","Notify","failure","i","then","success","catch","finally","reset"],"version":3,"file":"03-promises.81a61b41.js.map"}